#!/usr/bin/env php
<?php

/**
 * Console application for Contao Open Source CMS
 * Copyright (C) 2013,2014 Contao Community Alliance
 *
 * PHP version 5
 *
 * @copyright  Contao Community Alliance 2013,2014
 * @author     Tristan Lins <tristan.lins@bit3.de>
 * @package    contao-community-alliance/console
 * @license    LGPL
 * @filesource
 */

// protect from WEB access
if (PHP_SAPI != 'cli') {
	echo 'This script must be run in a terminal.';
	exit(1);
}

$dir = dirname($argv[0]);

while ($dir != '.' && $dir != '/' && !is_file($dir . '/system/initialize.php')) {
	$dir = dirname($dir);

}

if (!is_file($dir . '/system/initialize.php')) {
	echo 'Could not find initialize.php!';
	exit(1);
}

define('TL_MODE', 'CLI');
require($dir . '/system/initialize.php');

class ContaoConsole extends System
{
	public function __construct()
	{
		parent::__construct();
		$this->loadLanguageFile('default');
	}

	public function run()
	{
		$application = new \Symfony\Component\Console\Application('contao');

		if (array_key_exists('CONSOLE_CMD', $GLOBALS) && is_array($GLOBALS['CONSOLE_CMD'])) {
			foreach ($GLOBALS['CONSOLE_CMD'] as $cmdClass) {
				$application->add(new $cmdClass);
			}
		}

		if (array_key_exists('TL_HOOKS', $GLOBALS) && array_key_exists('initializeConsole', $GLOBALS['TL_HOOKS']) && is_array($GLOBALS['TL_HOOKS']['initializeConsole'])) {
			foreach ($GLOBALS['TL_HOOKS']['initializeConsole'] as $callback) {
				$object = method_exists($callback[0], 'getInstance') ? call_user_func(array($callback[0], 'getInstance')) : new $callback[0];
				$object->$callback[1]($application);
			}
		}

		$application->run();
	}
}

$console = new ContaoConsole();
$console->run();
